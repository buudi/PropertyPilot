namespace PropertyPilot.Dal.Models;

using System;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

/// <summary>
/// Represents a tenant's account information.
/// Corresponds to the "TenantAccount" table in the database.
/// </summary>
public class TenantAccount
{
    /// <summary>
    /// Unique identifier for the tenant account.
    /// This is the primary key and is automatically generated by the database.
    /// </summary>
    [Key]
    [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
    public Guid Id { get; set; }

    /// <summary>
    /// The ID of the tenant this account belongs to.
    /// This is a foreign key to the "Tenant" table.
    /// </summary>
    public Guid? TenantId { get; set; }

    /// <summary>
    /// The email address associated with the tenant account.
    /// </summary>
    public string Email { get; set; } = string.Empty; // Initialize to prevent null warnings

    /// <summary>
    /// The hashed password for the account.
    /// </summary>
    public string HashedPassword { get; set; } = string.Empty; // Initialize to prevent null warnings

    /// <summary>
    /// The date and time when the account was created.
    /// Defaults to the current timestamp in the database.
    /// </summary>
    public DateTime CreatedOn { get; set; }

    /// <summary>
    /// Indicates whether the account has been archived.
    /// Defaults to false.
    /// </summary>
    public bool IsArchived { get; set; }

    /// <summary>
    /// The date and time when the account was archived.
    /// This field can be null if the account is not archived.
    /// </summary>
    public DateTime? DateArchived { get; set; }

    /// <summary>
    /// The refresh token for authentication purposes.
    /// This field can be null.
    /// </summary>
    public string? RefreshToken { get; set; }

    /// <summary>
    /// The expiry time for the refresh token.
    /// This field can be null.
    /// </summary>
    public DateTime? RefreshTokenExpiryTime { get; set; }

    /// <summary>
    /// Indicates whether the account currently has access.
    /// Defaults to true.
    /// </summary>
    public bool HasAccess { get; set; }

    /// <summary>
    /// The date and time of the last successful login.
    /// Defaults to the current timestamp in the database.
    /// </summary>
    public DateTime LastLogin { get; set; }
}
