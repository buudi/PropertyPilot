// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PropertyPilot.Dal.Contexts;

#nullable disable

namespace PropertyPilot.Api.Migrations
{
    [DbContext(typeof(PpDbContext))]
    partial class PpDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PropertyPilot.Dal.Models.PropertiesList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_on")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("DateArchived")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_archived");

                    b.Property<string>("Emirate")
                        .HasColumnType("text")
                        .HasColumnName("emirate");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("boolean")
                        .HasColumnName("is_archived");

                    b.Property<string>("PropertyName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("property_name");

                    b.Property<string>("PropertyType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("property_type");

                    b.Property<int?>("UnitsCount")
                        .HasColumnType("integer")
                        .HasColumnName("units_count");

                    b.HasKey("Id");

                    b.ToTable("properties_list");
                });
#pragma warning restore 612, 618
        }
    }
}
